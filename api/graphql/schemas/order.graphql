scalar URL

enum OrderStatus {
  CANCELLED
  COMPLETED
  POSTPONED
  PENDING
  ERROR
}

type Order {
  id: Int!
  total: Float!
  status: OrderStatus!
  products: [Product!]!
  customer: Customer!
  employee: Employee!
  payment: PaymentMethod!
  capture: URL
  reference: Int
  createdAt: String!
  updatedAt: String
  deletedAt: String
}

input OrderInput {
  products: [ProductWithQuantityInput!]!
  customerId: Int!
  employeeId: Int!
  payment: PaymentMethod!
  capture: URL
  reference: Int
}

type Query {
  # Employees only
  getAllOrders(step: Int, take: Int): [Order]

  # Customer Only
  getOrdersByStatus(step: Int, take: Int, status: OrderStatus!): [Order]

  # All
  getOrderById(id: Int!): Order
}

type Mutation {
  setStatus(id: Int!, status: OrderStatus!): Order
  completeOrder(id: Int): Ticket
  cancelOrder(id: Int): Order

  createOrder(input: OrderInput!): Order
  editOrder(input: OrderInput!): Order
  deleteOrder(input: OrderInput!): Int
}
