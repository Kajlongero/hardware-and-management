scalar EmailAddress
scalar JWT

enum Roles {
  CUSTOMER
  EMPLOYEE
  OWNER
  ADMIN
}

type Auth {
  id: Int!
  email: EmailAddress!
  role: String!
  createdAt: String!
  updatedAt: String
}

input LoginInput {
  email: EmailAddress!
  password: String!
}

type Token {
  token: JWT!
}

type Query {
  getCustomerByToken: Customer
  getEmployeeByToken: Employee

  logout: String
}

type Mutation {
  customerLogin(input: LoginInput!): Token
  employeeLogin(input: LoginInput!): Token

  passwordChange(oldPassword: String!, newPassword: String!): String

  # Password Recovery
  recoveryPasswordCode(email: EmailAddress!): Token
  verifyCode(code: Int!): Token
  changePassword(newPassword: String!): Token
  #

  customerChangeEmail(authId: Int!, email: EmailAddress!): EmailAddress
  employeeChangeEmail(authId: Int!, email: EmailAddress!): EmailAddress
}
