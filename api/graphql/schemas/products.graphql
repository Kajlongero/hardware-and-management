scalar URL

type Product {
  id: String!
  name: String!
  stock: Int!
  price: Float!
  sku: String!
  available: Boolean!
  coverImage: URL!
  images: [URL]!
  createdAt: String!
  updatedAt: String
  deletedAt: String
}

input ProductInput {
  name: String!
  stock: Int!
  price: Float!
  coverImage: URL!
  images: [URL]
  available: Boolean!
}

input ProductWithQuantityInput {
  id: String!
  quantity: Int!
}

input ImagesInOrder {
  image: URL!
  order: Int
}

type Query {
  getAllProducts(take: Int, step: Int): [Product!]!
  getUniqueProduct(id: String!): Product!
}

type Mutation {
  setAvailable(id: String!, available: Boolean!): Product

  stablishCoverImage(id: String!, isRemoving: Boolean!, image: URL): Product
  uploadProductImages(id: String!, images: [ImagesInOrder!]!): Product
  removeProductImages(id: String!, imagesToDelete: [URL!]!): Product

  createProduct(input: ProductInput!): Product
  editProduct(id: String!, input: ProductInput!): Product
  deleteProduct(id: String!): String
}
